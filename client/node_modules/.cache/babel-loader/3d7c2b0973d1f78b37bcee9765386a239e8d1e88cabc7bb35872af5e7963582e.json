{"ast":null,"code":"var _jsxFileName = \"/Users/akj/Desktop/newblog/client/src/pages/CreatePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Navigate } from 'react-router-dom'; // Import Navigate from React Router\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport Editor from './Editor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePost() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [content, setContent] = useState('');\n  const [files, setFiles] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  async function createNewPost(ev) {\n    ev.preventDefault();\n    const data = new FormData();\n    data.set('title', title);\n    data.set('summary', summary);\n    data.set('content', content);\n    data.set('file', files[0]);\n    console.log('Form Data:', Object.fromEntries(data.entries())); // Log form data\n    const response = await fetch('http://localhost:4000/post', {\n      method: 'POST',\n      body: data,\n      credentials: 'include'\n    });\n\n    // Log response\n    console.log('Response:', response);\n    if (response.ok) {\n      setRedirect(true);\n    } else {\n      console.error('Failed to create post:', response.status, response.statusText);\n    }\n  }\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: createNewPost,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"title\",\n      placeholder: 'Title',\n      value: title,\n      onChange: ev => setTitle(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"summary\",\n      placeholder: 'Summary',\n      value: summary,\n      onChange: ev => setSummary(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: ev => setFiles(ev.target.files)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      value: content,\n      onChange: setContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: '5px'\n      },\n      children: \"Create post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatePost, \"dgyyLwXku/v/UNI0MQCR1Q3VqVQ=\");\n_c = CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","Navigate","ReactQuill","Editor","jsxDEV","_jsxDEV","CreatePost","_s","title","setTitle","summary","setSummary","content","setContent","files","setFiles","redirect","setRedirect","createNewPost","ev","preventDefault","data","FormData","set","console","log","Object","fromEntries","entries","response","fetch","method","body","credentials","ok","error","status","statusText","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","children","type","placeholder","value","onChange","target","style","marginTop","_c","$RefreshReg$"],"sources":["/Users/akj/Desktop/newblog/client/src/pages/CreatePost.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Navigate } from 'react-router-dom'; // Import Navigate from React Router\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport Editor from './Editor';\n\nexport default function CreatePost(){\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [content, setContent] = useState('');\n  const [files, setFiles] = useState('');\n  const [redirect, setRedirect] = useState(false);\n\n  async function createNewPost(ev) {\n    ev.preventDefault();\n    const data = new FormData();\n    data.set('title', title);\n    data.set('summary', summary);\n    data.set('content', content);\n    data.set('file', files[0]);\n  \n    console.log('Form Data:', Object.fromEntries(data.entries())); // Log form data\n    const response = await fetch('http://localhost:4000/post', {\n      method: 'POST',\n      body: data,\n      credentials:'include',\n    });\n\n    // Log response\n  console.log('Response:', response);\n\n\n  if (response.ok) {\n    setRedirect(true);\n  } else {\n    console.error('Failed to create post:', response.status, response.statusText);\n  }\n}\n\n  if (redirect) {\n    return <Navigate to={'/'} />;\n  }\n\n  return (\n    <form onSubmit={createNewPost}>\n      <input type=\"title\" placeholder={'Title'} value={title} onChange={ev => setTitle(ev.target.value)} />\n      <input type=\"summary\" placeholder={'Summary'} value={summary} onChange={ev => setSummary(ev.target.value)} />\n      <input type=\"file\" onChange={ev => setFiles(ev.target.files)} />\n      <Editor value={content} onChange={setContent}/>\n      <button style={{ marginTop: '5px' }}>Create post</button>\n    </form>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}