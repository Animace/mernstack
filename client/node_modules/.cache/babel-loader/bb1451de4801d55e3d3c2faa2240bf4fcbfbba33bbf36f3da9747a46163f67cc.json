{"ast":null,"code":"var _jsxFileName = \"/Users/akj/Desktop/newblog/client/src/pages/EditPost.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams, Navigate } from \"react-router-dom\";\nimport Editor from './Editor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditPost() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [content, setContent] = useState('');\n  const [files, setFiles] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  useEffect(() => {\n    fetch(`http://localhost:4000/post/${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch post\");\n      }\n      return response.json();\n    }).then(postInfo => {\n      setTitle(postInfo.title);\n      setContent(postInfo.content); // Set the content state here\n      setSummary(postInfo.summary);\n    }).catch(error => {\n      console.error(\"Error fetching post:\", error);\n    });\n  }, [id]);\n  async function updatePost(ev) {\n    ev.preventDefault();\n    const data = new FormData();\n    data.set('title', title);\n    data.set('summary', summary);\n    data.set('content', content);\n    if (files !== null && files !== void 0 && files[0]) {\n      data.set('file', files === null || files === void 0 ? void 0 : files[0]);\n    }\n    const response = await fetch('http://localhost:4000/post', {\n      method: 'PUT',\n      body: data,\n      credentials: 'include'\n    });\n    if (response.ok) {\n      setRedirect(true);\n    }\n  }\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/post/' + id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: updatePost,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"title\",\n      placeholder: 'Title',\n      value: title,\n      onChange: ev => setTitle(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"summary\",\n      placeholder: 'Summary',\n      value: summary,\n      onChange: ev => setSummary(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: ev => setFiles(ev.target.files)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      value: content,\n      onChange: setContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: '5px'\n      },\n      children: \"Update post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(EditPost, \"xR2TQkCYOPcJrGHyKMKAJzJGV8Q=\", false, function () {\n  return [useParams];\n});\n_c = EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["useEffect","useState","useParams","Navigate","Editor","jsxDEV","_jsxDEV","EditPost","_s","id","title","setTitle","summary","setSummary","content","setContent","files","setFiles","redirect","setRedirect","fetch","then","response","ok","Error","json","postInfo","catch","error","console","updatePost","ev","preventDefault","data","FormData","set","method","body","credentials","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","children","type","placeholder","value","onChange","target","style","marginTop","_c","$RefreshReg$"],"sources":["/Users/akj/Desktop/newblog/client/src/pages/EditPost.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams, Navigate } from \"react-router-dom\";\nimport Editor from './Editor';\n\nexport default function EditPost(){\n    const {id} = useParams();\n    const [title, setTitle] = useState('');\n    const [summary, setSummary] = useState('');\n    const [content, setContent] = useState('');\n    const [files, setFiles] = useState('');\n    const [redirect, setRedirect] = useState(false); \n\n    useEffect(() => {\n        fetch(`http://localhost:4000/post/${id}`)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(\"Failed to fetch post\");\n                }\n                return response.json();\n            })\n            .then(postInfo => {\n                setTitle(postInfo.title);\n                setContent(postInfo.content); // Set the content state here\n                setSummary(postInfo.summary);\n            })\n            .catch(error => {\n                console.error(\"Error fetching post:\", error);\n            });\n    }, [id]);\n    \n\n    async function updatePost(ev){\n        ev.preventDefault();\n        const data = new FormData();\n        data.set('title', title);\n        data.set('summary', summary);\n        data.set('content', content);\n        if (files?.[0]){\n            data.set('file', files?.[0]);\n        }\n       \n\n        const response= await fetch('http://localhost:4000/post',{\n            method:'PUT',\n            body: data,\n            credentials:'include',\n        });\n        if (response.ok){\n            setRedirect(true);\n        }\n        \n    }\n\n    if (redirect) {\n        return <Navigate to={'/post/'+id} />;\n    }\n\n    return (\n        <form onSubmit={updatePost}>\n            <input type=\"title\" placeholder={'Title'} value={title} onChange={ev => setTitle(ev.target.value)} />\n            <input type=\"summary\" placeholder={'Summary'} value={summary} onChange={ev => setSummary(ev.target.value)} />\n            <input type=\"file\" onChange={ev => setFiles(ev.target.files)} />\n            <Editor\n                value={content}\n                onChange={setContent}\n            />\n            <button style={{ marginTop: '5px' }}>Update post</button>\n        </form>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}