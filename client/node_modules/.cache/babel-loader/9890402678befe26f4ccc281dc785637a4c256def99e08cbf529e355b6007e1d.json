{"ast":null,"code":"var _jsxFileName = \"/Users/akj/Desktop/newblog/client/src/pages/PostPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostPage() {\n  _s();\n  const [postInfo, setPostInfo] = useState(null);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    fetch(`http://localhost:4000/post/${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch post\");\n      }\n      return response.json();\n    }).then(postInfo => {\n      setPostInfo(postInfo);\n    }).catch(error => {\n      console.error(\"Error fetching post:\", error);\n    });\n  }, [id]); // Include id in the dependency array\n\n  if (!postInfo) return '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `http://localhost:4000/${postInfo.cover}`,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(PostPage, \"IPnvg+RSP7wgje5GLXQ0Smq0TTQ=\", false, function () {\n  return [useParams];\n});\n_c = PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["useEffect","useState","useParams","jsxDEV","_jsxDEV","PostPage","_s","postInfo","setPostInfo","id","fetch","then","response","ok","Error","json","catch","error","console","children","src","cover","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/akj/Desktop/newblog/client/src/pages/PostPage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function PostPage() {\n    const [postInfo, setPostInfo] = useState(null);\n    const { id } = useParams();\n\n    useEffect(() => {\n        fetch(`http://localhost:4000/post/${id}`)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(\"Failed to fetch post\");\n                }\n                return response.json();\n            })\n            .then(postInfo => {\n                setPostInfo(postInfo);\n            })\n            .catch(error => {\n                console.error(\"Error fetching post:\", error);\n            });\n    }, [id]); // Include id in the dependency array\n\n    if (!postInfo) return '';\n\n    return (\n        <div>\n            <img src={`http://localhost:4000/${postInfo.cover}`} alt=\"\"/>\n        </div>\n    );\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM;IAAEQ;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EAE1BF,SAAS,CAAC,MAAM;IACZU,KAAK,CAAE,8BAA6BD,EAAG,EAAC,CAAC,CACpCE,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MAC3C;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAACJ,QAAQ,IAAI;MACdC,WAAW,CAACD,QAAQ,CAAC;IACzB,CAAC,CAAC,CACDS,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC;EACV,CAAC,EAAE,CAACR,EAAE,CAAC,CAAC,CAAC,CAAC;;EAEV,IAAI,CAACF,QAAQ,EAAE,OAAO,EAAE;EAExB,oBACIH,OAAA;IAAAe,QAAA,eACIf,OAAA;MAAKgB,GAAG,EAAG,yBAAwBb,QAAQ,CAACc,KAAM,EAAE;MAACC,GAAG,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEd;AAACpB,EAAA,CA3BuBD,QAAQ;EAAA,QAEbH,SAAS;AAAA;AAAAyB,EAAA,GAFJtB,QAAQ;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}